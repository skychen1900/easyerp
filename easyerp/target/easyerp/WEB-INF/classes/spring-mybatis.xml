<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">


	<!-- データソース配置 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- データソースURL　ユーザ　パスワード -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

		<!-- 初期化サイズ -->
		<property name="initialSize" value="0" />
		<!-- プールから貸し出すコネクションの最大数 -->
		<property name="maxActive" value="20" />

		<!-- プール内のコネクション数最大に保つ -->
		<property name="maxIdle" value="20" />

		<!-- プール内のコネクション数最小に保つ -->
		<property name="minIdle" value="0" />
		<!-- プール内のコネクションが不足したときの最大待ち時間 -->
		<property name="maxWait" value="60000" />

		
		<!-- アイドル状態のコネクションの検証間隔 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 何ミリ秒アイドルだったら検証するか -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- クローズ漏れとなったコネクションを回収するかどうか -->
		<property name="removeAbandoned" value="true" />
		<!-- コネクションが最後に使用されてから回収対象となるまでの時間（秒） -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- コネクションがプールから取り出されたときの時間とスタックトレースを回収時に出力するかどうか -->
		<property name="logAbandoned" value="true" />

        <!-- 配置监控统计拦截的filters -->  
		<property name="filters" value="stat,log4j" />
	</bean>

	<!-- myBatisファイル -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- スキャンEntity, Configuration.xmlの配置必要ない -->
		<property name="mapperLocations" value="classpath:com/ibm/easyerp/mapping/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ibm.easyerp.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- トランザクション配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />

			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.ibm.easyerp.service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>


	<!-- 配置Spring和Jdbc的关联监控 -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>com.ibm.easyerp.service.*</value>
			</list>
		</property>
	</bean>

	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>

</beans>